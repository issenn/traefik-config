################################################################
#
# Configuration sample for Traefik v2.
#
# For Traefik v1: https://github.com/containous/traefik/blob/v1.7/traefik.sample.toml
#
################################################################

################################################################
# Global configuration
################################################################
[global]
  checkNewVersion = false
  sendAnonymousUsage = false

################################################################
# Entrypoints configuration
################################################################

# Entrypoints definition
#
# Optional
# Default:
[entryPoints]
  [entryPoints.web]
    # Listen on port 80 for incoming requests
    address = ":80"

    [entryPoints.web.transport]
      [entryPoints.web.transport.lifeCycle]
        requestAcceptGraceTimeout = 42
        graceTimeOut = 42

      [entryPoints.web.transport.respondingTimeouts]
        readTimeout = 42
        writeTimeout = 42
        idleTimeout = 42

    # [entryPoints.web.proxyProtocol]
    #   # insecure = true
    #   trustedIPs = ["127.0.0.1/32", "192.168.1.7"]

    # [entryPoints.web.forwardedHeaders]
    #   # insecure = true
    #   trustedIPs = ["127.0.0.1/32", "192.168.1.7"]

  [entryPoints.websecure]
    address = ":443"

  [entryPoints.metrics]
    address = ":8082"

  # [entryPoints.ping]
  #   address = ":8082"

  # [entryPoints.mysql]
  #   address = ":3306"

  [entryPoints.other]
    address = ":8089"

# Enable ACME (Let's Encrypt): automatic SSL.
[certificatesResolvers]
  [certificatesResolvers.letsEncrypt]
    [certificatesResolvers.letsEncrypt.acme]

      # Email address used for registration.
      #
      # Required
      #
      # email = "your-email@your-domain.org"
      email = "issennknight@gmail.com"

      # File or key used for certificates storage.
      #
      # Required
      #
      # storage = "acme.json"
      storage = "/etc/traefik/acme/acme.json"

      # CA server to use.
      # Uncomment the line to use Let's Encrypt's staging server,
      # leave commented to go to prod.
      #
      # Optional
      # Default: "https://acme-v02.api.letsencrypt.org/directory"
      #
      caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"

      # KeyType to use.
      #
      # Optional
      # Default: "RSA4096"
      #
      # Available values : "EC256", "EC384", "RSA2048", "RSA4096", "RSA8192"
      #
      # keyType = "RSA4096"

      # Use a HTTP-01 ACME challenge.
      #
      # Optional
      #
      # [certificatesResolvers.sample.acme.httpChallenge]

        # EntryPoint to use for the HTTP-01 challenges.
        #
        # Required
        #
        # used during the challenge
        # entryPoint = "web"

      # Use a TLS-ALPN-01 ACME challenge.
      #
      # Optional (but recommended)
      #
      # [certificatesResolvers.sample.acme.tlsChallenge]

      # Use a DNS-01 ACME challenge rather than HTTP-01 challenge.
      # Note: mandatory for wildcard certificate generation.
      #
      # Optional
      #
      [certificatesResolvers.letsEncrypt.acme.dnsChallenge]

        # DNS provider used.
        #
        # Required
        #
        # provider = "digitalocean"
        provider = "cloudflare"

        # By default, the provider will verify the TXT DNS challenge record before letting ACME verify.
        # If delayBeforeCheck is greater than zero, this check is delayed for the configured duration in seconds.
        # Useful if internal networks block external DNS queries.
        #
        # Optional
        # Default: 0
        #
        # delayBeforeCheck = 0
        delayBeforeCheck = 30

        # Use following DNS servers to resolve the FQDN authority.
        #
        # Optional
        # Default: empty
        #
        # resolvers = ["1.1.1.1:53", "8.8.8.8:53"]
        resolvers = ["1.0.0.1:53", "8.8.8.8:53"]

        # Disable the DNS propagation checks before notifying ACME that the DNS challenge is ready.
        #
        # NOT RECOMMENDED:
        # Increase the risk of reaching Let's Encrypt's rate limits.
        #
        # Optional
        # Default: false
        #
        # disablePropagationCheck = true

  # [certificatesResolvers.cloudflare]
  #   [certificatesResolvers.cloudflare.acme]
  #     email = "issennknight@gmail.com"
  #     storage = "/etc/traefik/acme/acme-cloudflare.json"
  #     caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
  #     [certificatesResolvers.cloudflare.acme.dnsChallenge]
  #       provider = "cloudflare"
  #       delayBeforeCheck = 30
  #       resolvers = ["1.0.0.1:53", "8.8.8.8:53"]

# [hostResolver]
#   cnameFlattening = true
#   resolvConfig = ""
#   resolvDepth = 42

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
[log]

  # Log level
  #
  # Optional
  # Default: "ERROR"
  #
  # level = "DEBUG"
  # level = "WARN"
  # level = "INFO"

  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  # filePath = "log/traefik.log"
  # filePath = "/usr/local/var/log/traefik/general.log"
  filePath = "/var/log/traefik/general.log"

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
  # format = "json"

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
[accessLog]

  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  # filePath = "/path/to/log/log.txt"
  # filePath = "/usr/local/var/log/traefik/access.log"
  filePath = "/var/log/traefik/access.log"

  bufferingSize = 100

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
  # format = "json"

  [accessLog.filters]
    statusCodes = ["200", "300-302"]
    retryAttempts = true
    minDuration = "10ms"

  [accessLog.fields]
    defaultMode = "keep"

    [accessLog.fields.names]
      "ClientUsername" = "drop"
      "StartUTC" = "drop"

    [accessLog.fields.headers]
      defaultMode = "keep"

      [accessLog.fields.headers.names]
        "User-Agent" = "redact"
        "Authorization" = "drop"
        "Content-Type" = "keep"

[metrics]
  [metrics.prometheus]
    buckets = [0.1,0.3,1.2,5.0]
    addEntryPointsLabels = true
    addServicesLabels = true
    entryPoint = "metrics"

# [tracing]
#   servicename = "tracing"
#   [tracing.jaeger]
#     samplingParam = 1.0
#     samplingServerURL = "http://12.0.0.1:5778/sampling"
#     samplingType = "const"
#     localAgentHostPort = "12.0.0.1:6831"

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
[api]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  # entryPoint = "traefik"

  # insecure = true
  insecure = false

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  # dashboard = false
  dashboard = true

  debug = true

################################################################
# Ping configuration
################################################################

# Enable ping
[ping]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  # entryPoint = "traefik"

  # manualRouting = true

## Static configuration

[serversTransport]
  insecureSkipVerify = true
  # rootCAs = ["foo.crt", "bar.crt"]
  maxIdleConnsPerHost = 7

  [serversTransport.forwardingTimeouts]
    # dialTimeout = "30s"
    dialTimeout = 30
    # responseHeaderTimeout = "1s"
    responseHeaderTimeout = 5
    # idleConnTimeout = "90s"
    idleConnTimeout = 90

[providers]
  # providersThrottleDuration = "10s"
  providersThrottleDuration = 10

################################################################
# Docker configuration backend
################################################################

# Enable Docker configuration backend
[providers.docker]

  # Docker server endpoint. Can be a tcp or a unix socket endpoint.
  #
  # Required
  # Default: "unix:///var/run/docker.sock"
  #
  # endpoint = "tcp://10.10.10.10:2375"
  endpoint = "unix:///var/run/docker.sock"

  # Default host rule.
  #
  # Optional
  # Default: "Host(`{{ normalize .Name }}`)"
  #
  # defaultRule = "Host(`{{ normalize .Name }}.docker.localhost`)"
  defaultRule = "Host(`{{ index .Labels \"com.docker.compose.service\" }}.docker.localhost`)"

  # Expose containers by default in traefik
  #
  # Optional
  # Default: true
  #
  # exposedByDefault = false
  exposedByDefault = false

  watch = true
  swarmMode = false
  useBindPortIP = false
  network = "traefik"

################################################################
# File configuration backend
################################################################

  # Enable the file provider to define routers / middlewares / services in a file
  [providers.file]
    # filename = "dynamic_conf.toml"
    directory = "/etc/traefik/config"
    watch = true
    debugLogGeneratedTemplate = true

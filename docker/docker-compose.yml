version: '3.7'

services:
  traefik:
    # The official v2.0 Traefik docker image
    image: traefik:v2.1.4
    container_name: "traefik"
    hostname: "traefik"
    # restart: always
    # Enables the web UI and tells Traefik to listen to docker
    # command:
    #   # - "--log.level=DEBUG"
    #   # Traefik will listen on port 8080 by default for API request.
    #   - "--api.insecure=true"
    #   # Enabling docker provider
    #   - "--providers.docker=true"
    #   - "--providers.docker.endpoint=unix:///var/run/docker.sock"
    #   # Do not expose containers unless explicitly told so
    #   - "--providers.docker.exposedbydefault=false"
    #   # Traefik will listen to incoming request on the port 80 (HTTP)
    #   - "--entrypoints.web.address=:80"
    # expose:
    #   - "80:80"
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      - "8082:8082"
    networks:
      - "traefik"
    volumes:
      # So that Traefik can listen to the Docker events
      # - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - type: bind
        source: "/var/run/docker.sock"
        target: "/var/run/docker.sock"
        read_only: true
        volume:
          nocopy: true
      - type: bind
        source: "./traefik.toml"
        target: "/etc/traefik/traefik.toml"
        read_only: true
        volume:
          nocopy: true
      - type: bind
        source: "./config"
        target: "/etc/traefik/config"
        read_only: true
        volume:
          nocopy: true
      - type: bind
        source: "./ssl"
        target: "/etc/traefik/ssl"
        read_only: true
        volume:
          nocopy: true
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -q --spider --proxy off localhost:8080/ping || exit 1"]
    #   interval: 3s
    #   timeout: 5s
    environment:
      TZ: "Asia/Shanghai"

  whoami:
    # A container that exposes an API to show its IP address
    image: "containous/whoami"
    # container_name: "simple-service"
    hostname: whoami
    # ports:
    #   - "80:80"
    networks:
      - "traefik"
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.whoami.rule=Host(`whoami.issenn.lan`)"
      # Allow request only from the predefined entry point named "web"
      - "traefik.http.routers.whoami.entrypoints=web"

# 先创建外部网卡
# docker network create traefik
networks:
  traefik:
    # name: "traefik"
    # driver: "bridge"
    external: true
